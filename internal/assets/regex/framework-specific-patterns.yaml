patterns:
  # React-specific sensitive patterns

  # Environment Variables in React
  - pattern:
      name: "React Environment Variable"
      regex: "process\\.env\\.REACT_APP_[A-Z_][A-Z0-9_]*"
      confidence: "Medium"
  - pattern:
      name: "Vite Environment Variable"
      regex: "import\\.meta\\.env\\.VITE_[A-Z_][A-Z0-9_]*"
      confidence: "Medium"

  # React Component Props with Sensitive Data
  - pattern:
      name: "API Key in React Props"
      regex: "apiKey\\s*=\\s*['\"]([a-zA-Z0-9_-]{20,})['\"]"
      confidence: "Medium"
  - pattern:
      name: "Token in React Props"
      regex: "token\\s*=\\s*['\"]([a-zA-Z0-9_\\-\\./+=]{20,})['\"]"
      confidence: "Medium"

  # React State with Sensitive Data
  - pattern:
      name: "Sensitive Data in useState"
      regex: "useState\\([^)]*(?:password|token|secret|apiKey)"
      confidence: "Medium"
  - pattern:
      name: "Sensitive Data in useReducer"
      regex: "useReducer\\([^)]*(?:password|token|secret|apiKey)"
      confidence: "Medium"

  # React Context with Sensitive Data
  - pattern:
      name: "Auth Context with Token"
      regex: "createContext\\([^)]*token"
      confidence: "Medium"
  - pattern:
      name: "API Context with Key"
      regex: "createContext\\([^)]*apiKey"
      confidence: "Medium"

  # Vue.js specific patterns

  # Vue Environment Variables
  - pattern:
      name: "Vue Environment Variable"
      regex: "process\\.env\\.VUE_APP_[A-Z_][A-Z0-9_]*"
      confidence: "Medium"

  # Vue Data Properties
  - pattern:
      name: "Sensitive Data in Vue Data"
      regex: "data\\(\\)\\s*\\{[^}]*['\"](?:password|token|secret|apiKey)['\"]"
      confidence: "Medium"

  # Vue Computed Properties
  - pattern:
      name: "Sensitive Data in Vue Computed"
      regex: "computed:\\s*\\{[^}]*(?:password|token|secret|apiKey)"
      confidence: "Medium"

  # Angular specific patterns

  # Angular Environment Files
  - pattern:
      name: "Angular Environment Variable"
      regex: "environment\\.[a-zA-Z_][a-zA-Z0-9_]*"
      confidence: "Medium"

  # Angular Services with Sensitive Data
  - pattern:
      name: "Angular Service with API Key"
      regex: "@Injectable\\(\\)\\s*export\\s+class\\s+.*Service[^}]*apiKey"
      confidence: "Medium"
  - pattern:
      name: "Angular Service with Token"
      regex: "@Injectable\\(\\)\\s*export\\s+class\\s+.*Service[^}]*token"
      confidence: "Medium"

  # Node.js/Express specific patterns

  # Express Middleware with Secrets
  - pattern:
      name: "JWT Secret in Express"
      regex: "jwtSecret\\s*[:=]\\s*['\"]([a-zA-Z0-9_\\-\\./+=]{20,})['\"]"
      confidence: "High"
  - pattern:
      name: "Session Secret in Express"
      regex: "sessionSecret\\s*[:=]\\s*['\"]([a-zA-Z0-9_\\-\\./+=]{20,})['\"]"
      confidence: "High"
  - pattern:
      name: "Cookie Secret in Express"
      regex: "cookieSecret\\s*[:=]\\s*['\"]([a-zA-Z0-9_\\-\\./+=]{20,})['\"]"
      confidence: "High"

  # Express Routes with Sensitive Data
  - pattern:
      name: "API Key in Express Route"
      regex: "app\\.(?:get|post|put|delete)\\([^)]*apiKey"
      confidence: "Medium"
  - pattern:
      name: "Token in Express Route"
      regex: "app\\.(?:get|post|put|delete)\\([^)]*token"
      confidence: "Medium"

  # Database Models with Sensitive Fields
  - pattern:
      name: "Mongoose Model with Password"
      regex: "password:\\s*\\{[^}]*type:\\s*String"
      confidence: "Medium"
  - pattern:
      name: "Sequelize Model with Token"
      regex: "token:\\s*\\{[^}]*type:\\s*DataTypes"
      confidence: "Medium"

  # Frontend Framework API Calls
  - pattern:
      name: "Fetch API with Authorization"
      regex: "fetch\\([^,]+,\\s*\\{[^}]*Authorization"
      confidence: "Medium"
  - pattern:
      name: "Axios Request with API Key"
      regex: "axios\\.(?:get|post|put|delete)\\([^,]+,\\s*\\{[^}]*apiKey"
      confidence: "Medium"
  - pattern:
      name: "Axios Headers with Token"
      regex: "headers:\\s*\\{[^}]*Authorization\\s*:\\s*['\"](?:Bearer|Basic)"
      confidence: "Medium"

  # State Management (Redux, Vuex, etc.)
  - pattern:
      name: "Redux Action with Sensitive Data"
      regex: "(?:dispatch|commit)\\([^)]*(?:LOGIN|AUTH|TOKEN)"
      confidence: "Low"
  - pattern:
      name: "Vuex Mutation with Token"
      regex: "commit\\(['\"](?:SET_TOKEN|SET_API_KEY)"
      confidence: "Medium"

  # Build Configuration Files
  - pattern:
      name: "Webpack DefinePlugin with Secrets"
      regex: "new\\s+webpack\\.DefinePlugin\\([^}]*API_KEY"
      confidence: "Medium"
  - pattern:
      name: "Vite Define with Secrets"
      regex: "define:\\s*\\{[^}]*API_KEY"
      confidence: "Medium"

  # Testing Files with Real Credentials
  - pattern:
      name: "Jest Test with Real API Key"
      regex: "test\\(['\"][^'\"]*['\"],\\s*\\(\\)\\s*=>\\s*\\{[^}]*['\"](sk_live|pk_live|AKIA)"
      confidence: "High"
  - pattern:
      name: "Cypress Test with Real Token"
      regex: "cy\\.[^}]*['\"](eyJ[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+)"
      confidence: "High"

  # Package.json Scripts with Secrets
  - pattern:
      name: "NPM Script with API Key"
      regex: "\"scripts\":\\s*\\{[^}]*(?:API_KEY|TOKEN|SECRET)"
      confidence: "Medium"

  # Docker Environment Variables
  - pattern:
      name: "Docker ENV with Sensitive Data"
      regex: "ENV\\s+[A-Z_][A-Z0-9_]*\\s*=\\s*['\"]?[^'\"\\s]{20,}['\"]?"
      confidence: "Medium"

  # CI/CD Variables
  - pattern:
      name: "GitHub Actions Secret"
      regex: "\\$\\{\\{[^}]*secrets\\.[A-Z_][A-Z0-9_]*"
      confidence: "Low"
  - pattern:
      name: "GitLab CI Variable"
      regex: "\\$([A-Z_][A-Z0-9_]*)"
      confidence: "Low"

  # Browser Storage Patterns
  - pattern:
      name: "IndexedDB with Sensitive Data"
      regex: "indexedDB\\..*store.*(?:token|apiKey|secret)"
      confidence: "Medium"
  - pattern:
      name: "WebSQL with Credentials"
      regex: "openDatabase\\([^)]*(?:password|token|secret)"
      confidence: "Medium"

  # Service Worker Patterns
  - pattern:
      name: "Service Worker with API Key"
      regex: "self\\.addEventListener\\([^}]*fetch[^}]*apiKey"
      confidence: "Medium"
  - pattern:
      name: "Service Worker with Token"
      regex: "self\\.addEventListener\\([^}]*fetch[^}]*Authorization"
      confidence: "Medium"

  # Web Components
  - pattern:
      name: "Custom Element with Sensitive Props"
      regex: "customElements\\.define\\([^,]+,\\s*class\\s+.*\\{[^}]*apiKey"
      confidence: "Medium"

  # Module Federation
  - pattern:
      name: "Webpack Module Federation with Secrets"
      regex: "new\\s+ModuleFederationPlugin\\([^}]*exposes[^}]*apiKey"
      confidence: "Medium"

  # GraphQL
  - pattern:
      name: "GraphQL Query with Token"
      regex: "gql`[^`]*Authorization\\s*:\\s*['\"](?:Bearer|Basic)"
      confidence: "Medium"
  - pattern:
      name: "Apollo Client with API Key"
      regex: "new\\s+ApolloClient\\([^}]*headers[^}]*apiKey"
      confidence: "Medium"

  # Real-time Communication
  - pattern:
      name: "Socket.io with Auth Token"
      regex: "io\\([^)]*auth[^}]*token"
      confidence: "Medium"
  - pattern:
      name: "WebSocket with API Key"
      regex: "new\\s+WebSocket\\([^)]*apiKey"
      confidence: "Medium"

  # Progressive Web App
  - pattern:
      name: "PWA Manifest with Sensitive Data"
      regex: "manifest\\.json.*['\"](?:apiKey|token|secret)['\"]"
      confidence: "Medium"

  # Internationalization
  - pattern:
      name: "i18n Files with API Keys"
      regex: "(?:en|es|fr|de)\\.json.*['\"](?:apiKey|token|secret)['\"]"
      confidence: "Medium"